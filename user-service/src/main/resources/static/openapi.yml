openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:9030
    description: Generated server url
paths:
  /api/mitocode/profile:
    get:
      tags:
        - profile-controller
      operationId: listAllFormsOfMetadata_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentationModel'
  /api/mitocode/profile/user:
    get:
      tags:
        - profile-controller
      operationId: descriptor_1_1_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api/mitocode/user:
    get:
      tags:
        - user-entity-entity-controller
      description: get-userentity
      operationId: getCollectionResource-userentity-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserEntity'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUserEntity'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
        - user-entity-entity-controller
      description: create-userentity
      operationId: postCollectionResource-userentity-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntityRequestBody'
        required: true
      responses:
        '201':
          description: Created
          content: {}
  /api/mitocode/user/search/apellido:
    get:
      tags:
        - user-entity-search-controller
      operationId: executeSearch-userentity-get
      parameters:
        - name: lastname
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserEntity'
        '404':
          description: Not Found
  /api/mitocode/user/search/correito:
    get:
      tags:
        - user-entity-search-controller
      operationId: executeSearch-userentity-get_1
      parameters:
        - name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelUserEntity'
        '404':
          description: Not Found
  /api/mitocode/user/search/multiple:
    get:
      tags:
        - user-entity-search-controller
      operationId: executeSearch-userentity-get_2
      parameters:
        - name: lastname
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserEntity'
        '404':
          description: Not Found
  /api/mitocode/user/{id}:
    get:
      tags:
        - user-entity-entity-controller
      description: get-userentity
      operationId: getItemResource-userentity-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '404':
          description: Not Found
    put:
      tags:
        - user-entity-entity-controller
      description: update-userentity
      operationId: putItemResource-userentity-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntityRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        '201':
          description: Created
          content: {}
        '204':
          description: No Content
    delete:
      tags:
        - user-entity-entity-controller
      description: delete-userentity
      operationId: deleteItemResource-userentity-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - user-entity-entity-controller
      description: patch-userentity
      operationId: patchItemResource-userentity-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEntityRequestBody'
        required: true
      responses:
        '200':
          description: OK
          content: {}
        '204':
          description: No Content
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Link:
      type: object
      properties:
        rel:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
    RepresentationModel:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelUserEntity:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelUserEntity:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        content:
          type: array
          items:
            $ref: '#/components/schemas/EntityModelUserEntity'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelUserEntity:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        content:
          type: array
          items:
            $ref: '#/components/schemas/EntityModelUserEntity'
    UserEntityRequestBody:
      type: object
